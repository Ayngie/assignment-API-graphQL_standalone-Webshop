type Product {
  id: ID!
  name: String!
  description: String
  unitPrice: Float!
}

type CartItem {
  id: ID!
  name: String!
  unitPrice: Float!
  quantity: Int!
}

type ShoppingCart {
  id: ID!
  itemsInCart: [CartItem]
  totalSum: Float!
}

type DeletedResourceResponse {
  deletedId: ID
  success: Boolean
}

type Query {
  getProductById(productId: ID!): Product
  getAllProducts: [Product]

  getShoppingCartById(shoppingCartId: ID!): ShoppingCart
  getAllShoppingCarts: [ShoppingCart]

  # getCartItemById(cartItemID: ID!): CartItem
}

type Mutation {
  createProduct(name: String!, description: String, unitPrice: Float!): Product
  updateProduct(id: ID!, name: String!, unitPrice: Float!): Product
  deleteProduct(productId: ID!): DeletedResourceResponse

  createNewShoppingCart: ShoppingCart
  deleteShoppingCart(shoppingCartId: ID!): DeletedResourceResponse

  addCartItem(shoppingCartId: ID!, productId: ID!): ShoppingCart
  removeCartItem(shoppingCartId: ID!, cartItemId: ID!): ShoppingCart
  emptyAllCartItems(shoppingCartId: ID!): ShoppingCart
}
